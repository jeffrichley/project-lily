petal: "1"
name: "Video Processing Workflow"
description: "Process video files with multiple steps"

params:
  input_file:
    type: "file"
    required: true
    help: "Input video file path"

  output_format:
    type: "str"
    required: false
    default: "mp4"
    help: "Output video format"

  quality:
    type: "str"
    required: false
    default: "high"
    help: "Processing quality"

vars:
  output_dir: "output/{{ hash(params.input_file) }}"
  temp_dir: "{{ output_dir }}/temp"

steps:
  - id: "validate_input"
    uses: "shell"
    if_: "params.input_file"
    with_:
      command: "test -f {{ params.input_file }} && echo 'File exists'"
    outputs:
      validated:
        type: "str"
        path: "{{ temp_dir }}/validated.txt"

  - id: "extract_metadata"
    uses: "shell"
    needs: ["validate_input"]
    env:
      INPUT_FILE: "{{ params.input_file }}"
    with_:
      command: "ffprobe -v quiet -print_format json -show_format -show_streams $INPUT_FILE"
    outputs:
      metadata:
        type: "json"
        path: "{{ temp_dir }}/metadata.json"

  - id: "process_video"
    uses: "shell"
    needs: ["extract_metadata"]
    if_: "params.quality == 'high'"
    env:
      INPUT_FILE: "{{ params.input_file }}"
      OUTPUT_FILE: "{{ output_dir }}/processed_high.{{ params.output_format }}"
    with_:
      command: "ffmpeg -i $INPUT_FILE -c:v libx264 -preset slow -crf 18 $OUTPUT_FILE"
    outputs:
      processed_video_high:
        type: "file"
        path: "{{ output_dir }}/processed_high.{{ params.output_format }}"

  - id: "process_video_fast"
    uses: "shell"
    needs: ["extract_metadata"]
    if_: "params.quality == 'fast'"
    env:
      INPUT_FILE: "{{ params.input_file }}"
      OUTPUT_FILE: "{{ output_dir }}/processed_fast.{{ params.output_format }}"
    with_:
      command: "ffmpeg -i $INPUT_FILE -c:v libx264 -preset fast -crf 23 $OUTPUT_FILE"
    outputs:
      processed_video_fast:
        type: "file"
        path: "{{ output_dir }}/processed_fast.{{ params.output_format }}"

  - id: "generate_thumbnail_high"
    uses: "shell"
    needs: ["process_video"]
    if_: "params.quality == 'high'"
    env:
      INPUT_FILE: "{{ output_dir }}/processed_high.{{ params.output_format }}"
      THUMBNAIL: "{{ output_dir }}/thumbnail_high.jpg"
    with_:
      command: "ffmpeg -i $INPUT_FILE -ss 00:00:01 -vframes 1 $THUMBNAIL"
    outputs:
      thumbnail_high:
        type: "file"
        path: "{{ output_dir }}/thumbnail_high.jpg"

  - id: "generate_thumbnail_fast"
    uses: "shell"
    needs: ["process_video_fast"]
    if_: "params.quality == 'fast'"
    env:
      INPUT_FILE: "{{ output_dir }}/processed_fast.{{ params.output_format }}"
      THUMBNAIL: "{{ output_dir }}/thumbnail_fast.jpg"
    with_:
      command: "ffmpeg -i $INPUT_FILE -ss 00:00:01 -vframes 1 $THUMBNAIL"
    outputs:
      thumbnail_fast:
        type: "file"
        path: "{{ output_dir }}/thumbnail_fast.jpg"

  - id: "generate_thumbnail"
    uses: "shell"
    needs: ["generate_thumbnail_high", "generate_thumbnail_fast"]
    env:
      THUMBNAIL: "{{ output_dir }}/thumbnail.jpg"
    with_:
      command: "cp {{ output_dir }}/thumbnail_{{ params.quality }}.jpg $THUMBNAIL"
    outputs:
      thumbnail:
        type: "file"
        path: "{{ output_dir }}/thumbnail.jpg"

  - id: "cleanup"
    uses: "shell"
    needs: ["generate_thumbnail"]
    with_:
      command: "rm -rf {{ temp_dir }}"
    cache:
      policy: "never"

outputs:
  - path: "{{ output_dir }}/processed.{{ params.output_format }}"
    description: "Processed video file"
  - path: "{{ output_dir }}/thumbnail.jpg"
    description: "Video thumbnail"
  - path: "{{ temp_dir }}/metadata.json"
    description: "Video metadata"
